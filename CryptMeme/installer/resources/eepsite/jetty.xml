<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">

<!-- ========================================================================= -->
<!-- This file configures the Jetty server.                                    -->
<!-- All changes require a restart of I2P.                                     -->
<!--                                                                           -->
<!-- Commonly changed settings:                                                -->
<!--   * host: Change 127.0.0.1 to 0.0.0.0 in the addListener section          -->
<!--           to access the server directly (bypassing i2p)                   -->
<!--           from other computers.                                           -->
<!--   * port: Default 7658 in the addConnector section                         -->
<!--   * docroot: Change the ResourceBase in the contexts/base-context.xml file -->
<!--           to serve files from a different location.                       -->
<!--   * threads: Raise maximumPoolSize in the ThreadPool section              -->
<!--           if you have a high-traffic site and get a lot of warnings.      -->
<!--   * Uncomment the addWebApplications section to use to enable             -->
<!--           war files placed in the webapps/ dir.                           -->
<!--   * Uncomment the line to allow Jetty to follow symlinks                  -->
<!--                                                                           -->
<!-- I2P uses Jetty 7. If you need web server features not found               -->
<!-- in Jetty 7, you may install and run Jetty 7 or 8 in a different JVM       -->
<!-- or run any other web server such as Apache. If you do run another web     -->
<!-- server instead, be sure and disable the Jetty 6 server for your           -->
<!-- eepsite on http://127.0.0.1:7657/configclients.jsp .                      -->
<!--                                                                           -->
<!-- Jetty now uses the I2P logging system rather than wrapper.log.            -->
<!-- Use the log override org.eclipse.jetty.server.Server to adjust the log level.  -->
<!--                                                                           -->
<!-- Note that the XML encoding for this file is UTF-8.                        -->
<!--                                                                           -->
<!-- If you have a 'split' directory installation, with configuration          -->
<!-- files in ~/.i2p (Linux) or %APPDATA%\I2P (Windows), be sure to            -->
<!-- edit the file in the configuration directory, NOT the install directory.  -->
<!-- When running as a Linux daemon, the configuration directory is            -->
<!-- /var/lib/i2p and the install directory is /usr/share/i2p .                -->
<!--                                                                           -->
<!-- ========================================================================= -->

<!-- =============================================================== -->
<!-- Configure the Jetty Server                                      -->
<!--                                                                 -->
<!-- Documentation of this file format can be found at:              -->
<!-- http://docs.codehaus.org/display/JETTY/jetty.xml                -->
<!--                                                                 -->
<!-- =============================================================== -->


<Configure id="Server" class="org.eclipse.jetty.server.Server">

    <!-- =========================================================== -->
    <!-- Server Thread Pool                                          -->
    <!-- =========================================================== -->
    <Set name="ThreadPool">

      <!-- PICK ONE -->

      <!--
           Recommended.
           Two threads are used for the Connector and Acceptor.
           Concurrent requests above maxThreads + queue size - 2 will be rejected and logged.
           Due to the way QTP works, queue size should be larger than maxThreads.
           Increase all values for high-traffic eepsites.

           ref:
           https://wiki.eclipse.org/Jetty/Howto/High_Load
           http://trac.i2p2.i2p/ticket/1395
       -->
      <New class="org.eclipse.jetty.util.thread.QueuedThreadPool">
        <Arg>
           <New class="java.util.concurrent.LinkedBlockingQueue">
              <Arg type="int">40</Arg>
           </New>
        </Arg>
        <Set name="minThreads">3</Set>
        <Set name="maxThreads">20</Set>
        <Set name="maxIdleTimeMs">60000</Set>
        <Set name="daemon">true</Set>
        <Set name="name">Eepsite Jetty</Set>
      </New>

      <!-- Optional Java 5 bounded threadpool with job queue 
           Requests above the max will be rejected and logged.
           High-traffic sites should increase maximumPoolSize.

           Args are:
             corePoolSize (should be at least 3)
             maximumPoolSize
             keepAliveTime (milliseconds)
             timeout (TimeUnit)
             queue (BlockingQueue)

           Not recommended.
           ref:
           http://trac.i2p2.i2p/ticket/1395
           http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html
       -->
     <!--
      <New class="org.eclipse.jetty.util.thread.ExecutorThreadPool">
        <Arg type="int">3</Arg>
        <Arg type="int">20</Arg>
        <Arg type="long">60000</Arg>
        <Arg>
            <Call class="java.util.concurrent.TimeUnit" name="valueOf" >
                <Arg>MILLISECONDS</Arg>
            </Call>
        </Arg>
        <Arg>
            <New class="java.util.concurrent.SynchronousQueue" />
        </Arg>
      </New>
     -->
    </Set>



    <!-- =========================================================== -->
    <!-- Set connectors                                              -->
    <!-- =========================================================== -->
    <!-- One of each type!                                           -->
    <!-- =========================================================== -->

    <!-- Use this connector for many frequently idle connections
         and for threadless continuations.
         Not recommended on Java 5 - comment this out, and uncomment the
         SocketConnector below.
         Do not use for gij or JamVM - comment this out, and uncomment the
         SocketConnector below.
    -->    
    <Call name="addConnector">
      <Arg>
          <New class="org.eclipse.jetty.server.nio.SelectChannelConnector">
            <Set name="host">127.0.0.1</Set>
            <Set name="port">7658</Set>
            <Set name="maxIdleTime">600000</Set>
            <Set name="Acceptors">1</Set>
            <Set name="statsOn">false</Set>
	    <Set name="lowResourcesConnections">5000</Set>
	    <Set name="lowResourcesMaxIdleTime">5000</Set>
	    <Set name="useDirectBuffers">false</Set>
          </New>
      </Arg>
    </Call>

    <!-- Recommended to use this connector on Java 5, as
         Jetty 6 and Java 5 NIO don't play well together.
    -->
    <!--
    <Call name="addConnector">
      <Arg>
          <New class="org.eclipse.jetty.server.bio.SocketConnector">
            <Set name="host">127.0.0.1</Set>
            <Set name="port">7658</Set>
            <Set name="maxIdleTime">600000</Set>
            <Set name="Acceptors">1</Set>
            <Set name="statsOn">false</Set>
          </New>
      </Arg>
    </Call>
    -->

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- To add a HTTPS SSL listener                                     -->
    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
    <!-- To enable this change clients.config args to be:                -->
    <!--                                                                 -->
    <!--   clientApp3.args=etc/jetty.xml etc/jetty-ssl.xml               -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <!-- =========================================================== -->
    <!-- Set up global session ID manager                            -->
    <!-- =========================================================== -->
    <!--
    <Set name="sessionIdManager">
      <New class="org.eclipse.jetty.server.session.HashSessionIdManager">
        <Set name="workerName">node1</Set>
      </New>
    </Set>
    -->

    <!-- =========================================================== -->
    <!-- Set handler Collection Structure                            --> 
    <!-- =========================================================== -->
    <Set name="handler">
      <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
        <Set name="handlers">
         <Array type="org.eclipse.jetty.server.Handler">
           <Item>
             <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
           </Item>
           <Item>
             <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler"/>
           </Item>
           <Item>
             <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler"/>
           </Item>
         </Array>
        </Set>
      </New>
    </Set>

    <!-- =============================================================== -->
    <!-- Create the deployment manager                                   -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- The deplyment manager handles the lifecycle of deploying web    -->
    <!-- applications. Apps are provided by instances of the             -->
    <!-- AppProvider interface.  Typically these are provided by         -->
    <!-- one or more of:                                                 -->
    <!--   jetty-webapps.xml       - monitors webapps for wars and dirs  -->
    <!--   jetty-contexts.xml      - monitors contexts for context xml   -->
    <!--   jetty-templates.xml     - monitors contexts and templates     -->
    <!-- =============================================================== -->
    <Call name="addBean">
      <Arg>
        <New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
          <Set name="contexts">
            <Ref id="Contexts" />
          </Set>
          <Call name="setContextAttribute">
            <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
            <Arg>.*/.*jsp-api-[^/]*\.jar$|.*/.*jsp-[^/]*\.jar$|.*/.*taglibs[^/]*\.jar$</Arg>
          </Call>
        </New>
      </Arg>
    </Call>

    <!-- =========================================================== -->
    <!-- Configure the context deployer                              -->
    <!-- A context deployer will deploy contexts described in        -->
    <!-- configuration files discovered in a directory.              -->
    <!-- The configuration directory can be scanned for hot          -->
    <!-- deployments at the configured scanInterval.                 -->
    <!--                                                             -->
    <!-- This deployer is configured to deploy contexts configured   -->
    <!-- in the $JETTY_HOME/contexts directory                       -->
    <!--                                                             -->
    <!-- =========================================================== -->
    <Ref id="DeploymentManager">
      <Call name="addAppProvider">
        <Arg>
          <New class="org.eclipse.jetty.deploy.providers.ContextProvider">
            <Set name="monitoredDirName">./eepsite/contexts</Set>
            <Set name="scanInterval">120</Set>
          </New>
        </Arg>
      </Call>
    </Ref>

    <!-- =========================================================== -->
    <!-- Configure the webapp deployer.                              -->
    <!-- A webapp  deployer will deploy standard webapps discovered  -->
    <!-- in a directory at startup, without the need for additional  -->
    <!-- configuration files.    It does not support hot deploy or   -->
    <!-- non standard contexts (see ContextDeployer above).          -->
    <!--                                                             -->
    <!-- This deployer is configured to deploy webapps from the      -->
    <!-- $JETTY_HOME/webapps directory                               -->
    <!--                                                             -->
    <!-- Normally only one type of deployer need be used.            -->
    <!--                                                             -->
    <!-- =========================================================== -->
    <Ref id="DeploymentManager">
      <Call id="webappprovider" name="addAppProvider">
        <Arg>
          <New class="org.eclipse.jetty.deploy.providers.WebAppProvider">
            <Set name="monitoredDirName">./eepsite/webapps</Set>
	    <Set name="parentLoaderPriority">false</Set>
	    <Set name="extractWars">false</Set>
            <Set name="defaultsDescriptor">./eepsite/etc/webdefault.xml</Set>
          </New>
        </Arg>
      </Call>
    </Ref>

    <!-- =========================================================== -->
    <!-- Configure Authentication Realms                             -->
    <!-- Realms may be configured for the entire server here, or     -->
    <!-- they can be configured for a specific web app in a context  -->
    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
    <!-- example).                                                   -->
    <!-- =========================================================== -->
  <!-- UNCOMMENT TO ACTIVATE
    <Set name="UserRealms">
      <Array type="org.eclipse.jetty.security.LoginService">
        <Item>
          <New class="org.eclipse.jetty.security.HashLoginService">
            <Set name="name">Test Realm</Set>
            <Set name="config">./eepsite/etc/realm.properties</Set>
            <Set name="refreshInterval">0</Set>
          </New>
        </Item>
      </Array>
    </Set>
  -->

    <!-- =========================================================== -->
    <!-- Configure Request Log                                       -->
    <!-- Request logs  may be configured for the entire server here, -->
    <!-- or they can be configured for a specific web app in a       -->
    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
    <!-- for an example).                                            -->
    <!-- =========================================================== -->
    <Ref id="RequestLog">
      <Set name="requestLog">
        <New id="RequestLogImpl" class="net.i2p.jetty.I2PRequestLog">
          <Set name="filename">./eepsite/logs/yyyy_mm_dd.request.log</Set>
          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
          <Set name="retainDays">90</Set>
          <Set name="append">true</Set>
          <Set name="extended">false</Set>
          <Set name="logCookies">false</Set>
          <Set name="LogTimeZone">GMT</Set>
        </New>
      </Set>
    </Ref>

    <!-- =========================================================== -->
    <!-- extra options                                               -->
    <!-- =========================================================== -->
    <Set name="stopAtShutdown">true</Set>
    <Set name="sendServerVersion">false</Set>
    <Set name="sendDateHeader">true</Set>
    <Set name="gracefulShutdown">1000</Set>

</Configure>
