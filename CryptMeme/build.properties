# These properties can be set to alter the build process.
#
# This file contains default values that are used by official I2P installers.
#
# End-users *should not* edit this file. If you want to change the values, make a
# copy, call it override.properties, and make the desired changes to that.

################################################################################

# Javadocs
# Note: Include the trailing slash! Don't surround the URL in quotes!
javasedocs.url=http://docs.oracle.com/javase/6/docs/api/
javaeedocs.url=http://docs.oracle.com/javaee/6/api/
jettydocs.url=http://download.eclipse.org/jetty/stable-8/apidocs/
jrobindocs.url=http://docs.i2p-projekt.de/jrobin/javadoc/
wrapperdocs.url=http://wrapper.tanukisoftware.com/jdoc/
# these are only for unit test javadocs
i2pdocs.url=http://docs.i2p-projekt.de/javadoc/
junitdocs.url=http://junit.org/apidocs/
# This will go in the jar manifests
build.built-by=unknown

# filename of the sloccount report
sloccount.report.file=sloccount.sc

# Uncomment the next line to prevent "ant debian" from automatically
# updating the changelog
#noAutoDebchange=true

# Building EXEs in x64 Linux requires that 32bit libraries are installed. In Debian,
# for example, installing the libc6-i386 package will satisfy this requirement.

# Uncomment the next line to prevent building EXEs (changing it to false will have no impact)
#noExe=true

# Change this to false if you don't have gettext or you want to prevent it from running during the build
require.gettext=true

# Compile for this version of Java
javac.version=1.6

# Additional classpath if required
#javac.classpath=/PATH/TO/pack200.jar

# Optional compiler args
# This one keeps gcj a lot quieter
#javac.compilerargs=-warn:-unchecked,raw,unused,serial

#
# Note to packagers, embedders, distributors:
#
# Strictly speaking, you must either use the compiler for the minimum Java version you are
# targeting (default 1.6, see above), or specify a bootclasspath, which means you need
# the JRE for the target version installed as well.
#
# However, in practice, you can compile with 1.7 and target 1.6 without specifying a bootclasspath,
# and it all works fine.
#
# But you cannot compile with 1.8 and target 1.6 or 1.7 without bootclasspath,
# or your users will get runtime errors.
# Below is an example of a bootclasspath that works on Ubuntu.
#
# For more info:
#    http://zzz.i2p/topics/1668
#    https://gist.github.com/AlainODea/1375759b8720a3f9f094
#
#javac.compilerargs=-bootclasspath /usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar


### UnitTests ##
# Location of the libraries required for the ScalaTest tests.
# Define this in override.properties or pass in on the command line.
# The directory must contain the following library names:
# mockito-all.jar
# scala-compiler.jar
# scala-library.jar
# scalatest.jar
#scalatest.libs=/PATH/TO/SCALATEST/lib

# Location of the junit libraries
# Defaults to the ant library path if not set.
# If set, this must point to a directory that contains the file junit4.jar
#junit.home=

# Location of the hamcrest libraries
# Defaults to the ant library path if not set
# If set, this must point to a directory containing the files
#       hamcrest-core.jar, hamcrest-library.jar, and hamcrest-integration.jar
#hamcrest.home=

# Optional properties used in tests to enable additional tools.
#with.cobertura=/PATH/TO/cobertura.jar
#with.clover=/PATH/TO/clover.jar

### Bundle router infos ###
# Set to bundle router infos from your local I2P install in the package
#bundle.routerInfos=true
#bundle.routerInfos.count=200
#bundle.routerInfos.i2pConfigDir=/PATH/TO/.i2p
