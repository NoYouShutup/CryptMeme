<?xml version="1.0"?>
<project name="addressbook" default="war" basedir=".">

	<property name="src" value="java/src"/>
	<property name="build" value="build"/>
	<property name="dist"  location="dist"/>
	<property name="jar" value="addressbook.jar"/>
	<property name="war" value="addressbook.war"/>
	<property name="javac.compilerargs" value="" />
	<property name="javac.version" value="1.6" />
	
	<target name="init">
		<mkdir dir="${build}"/>
		<mkdir dir="${dist}"/>
	</target>

	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<target name="distclean" depends="clean" />

        <condition property="depend.available">
            <typefound name="depend" />
        </condition>
        <target name="depend" if="depend.available">
            <depend
                cache="../../build"
                srcdir="${src}"
                destdir="${build}" >
                <!-- Depend on classes instead of jars where available -->
                <classpath>
                    <pathelement location="../../core/java/build/obj" />
                </classpath>
            </depend>
        </target>

        <target name="dependServlet" if="depend.available">
            <depend
                cache="../../build"
                srcdir="${src}"
                destdir="${build}" >
                <!-- Depend on classes instead of jars where available -->
                <classpath>
                    <pathelement location="../../core/java/build/obj" />
                    <pathelement location="../jetty/jettylib/javax.servlet.jar" />
                </classpath>
            </depend>
        </target>

	<target name="compile" depends="init, depend">
            <javac debug="true" deprecation="on" source="${javac.version}" target="${javac.version}" 
                       includeAntRuntime="false"
                       srcdir="${src}" destdir="${build}"
                       excludes="net/i2p/addressbook/Servlet.java">
            <compilerarg line="${javac.compilerargs}" />
            <classpath>
                <pathelement location="../../core/java/build/i2p.jar" />
            </classpath>
		</javac>
	</target>

	<target name="compileServlet" depends="init, dependServlet, compile">
            <javac debug="true" deprecation="on" source="${javac.version}" target="${javac.version}" 
                       includeAntRuntime="false"
                       srcdir="${src}" destdir="${build}"
                       includes="net/i2p/addressbook/Servlet.java">
            <compilerarg line="${javac.compilerargs}" />
            <classpath>
                <pathelement location="../../core/java/build/i2p.jar" />
                <pathelement location="../jetty/jettylib/javax.servlet.jar" />
            </classpath>
		</javac>
	</target>

        <!-- unused for now (except for Android), as we oddly ship addressbook as a .war -->
	<target name="jar" depends="compile, changes">
		<!-- set if unset -->
		<property name="workspace.changes" value="" />
		<jar basedir="${build}" destfile="${dist}/${jar}">
			<manifest>
				<attribute name="Main-Class" value="addressbook.Daemon"/>
				<attribute name="Implementation-Version" value="${full.version}" />
				<attribute name="Built-By" value="${build.built-by}" />
		                <attribute name="Build-Date" value="${build.timestamp}" />
		                <attribute name="Base-Revision" value="${workspace.version}" />
		                <attribute name="Workspace-Changes" value="${workspace.changes}" />
			</manifest>
		</jar>
	</target>
	
	<target name="war" depends="compileServlet, changes, warUpToDate" unless="war.uptodate">
		<mkdir dir="${dist}/tmp"/>
		<mkdir dir="${dist}/tmp/WEB-INF"/>
		<mkdir dir="${dist}/tmp/WEB-INF/classes"/>
		<copy todir="${dist}/tmp/WEB-INF/classes">
			<fileset dir="${build}"/>
		</copy>
		<!-- set if unset -->
		<property name="workspace.changes.tr" value="" />
		<war basedir="${dist}/tmp" webxml="web.xml" destfile="${dist}/${war}">
			<manifest>
				<attribute name="Implementation-Version" value="${full.version}" />
				<attribute name="Built-By" value="${build.built-by}" />
		                <attribute name="Build-Date" value="${build.timestamp}" />
		                <attribute name="Base-Revision" value="${workspace.version}" />
		                <attribute name="Workspace-Changes" value="${workspace.changes.tr}" />
			</manifest>
		</war>
		<delete dir="${dist}/tmp"/>
	</target>
	
	<target name="warUpToDate">
	        <uptodate property="war.uptodate" targetfile="${dist}/${war}">
		            <srcfiles dir= "." includes="${build}/**/*.class, web.xml"/>
	        </uptodate>
                <condition property="shouldListChanges" >
                    <and>
                        <not>
                            <isset property="war.uptodate" />
                        </not>
                        <isset property="mtn.available" />
                    </and>
                </condition>
	</target>

	<target name="changes" depends="warUpToDate" if="shouldListChanges" >
	        <exec executable="mtn" outputproperty="workspace.changes" errorproperty="mtn.error2" failifexecutionfails="false" >
	            <arg value="list" />
	            <arg value="changed" />
	            <arg value="." />
	        </exec>
		<!-- \n in an attribute value generates an invalid manifest -->
		<exec executable="tr" inputstring="${workspace.changes}" outputproperty="workspace.changes.tr" errorproperty="mtn.error2" failifexecutionfails="false" >
			<arg value="-s" />
			<arg value="[:space:]" />
			<arg value="," />
		</exec>
	</target>
</project>
